{
	"id": "4f02f58a71baafda9f8f15bbba28424c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/test.sol": {
				"content": "// SPDX-License-Identifier : MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract RequireExample {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"test/test.sol": {
				"RequireExample": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/test.sol\":63:97  contract RequireExample {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/test.sol\":63:97  contract RequireExample {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c9292154622b142280a1859823256abf5f17b78c3a0276d60decd68783be3e9264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220c9292154622b142280a1859823256abf5f17b78c3a0276d60decd68783be3e9264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x29 0x21 SLOAD PUSH3 0x2B1422 DUP1 LOG1 DUP6 SWAP9 0x23 0x25 PUSH11 0xBF5F17B78C3A0276D60DEC 0xD6 DUP8 DUP4 0xBE RETURNDATACOPY SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "63:34:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220c9292154622b142280a1859823256abf5f17b78c3a0276d60decd68783be3e9264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x29 0x21 SLOAD PUSH3 0x2B1422 DUP1 LOG1 DUP6 SWAP9 0x23 0x25 PUSH11 0xBF5F17B78C3A0276D60DEC 0xD6 DUP8 DUP4 0xBE RETURNDATACOPY SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "63:34:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 97,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 97,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9292154622b142280a1859823256abf5f17b78c3a0276d60decd68783be3e9264736f6c634300081a0033",
									".code": [
										{
											"begin": 63,
											"end": 97,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 97,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 97,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 97,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 97,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 97,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"test/test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/test.sol\":\"RequireExample\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/test.sol\":{\"keccak256\":\"0x90046cd391bd2c9cbcd878fc5f48cbf26c7cb20dd7827705117059fd43c6d95d\",\"urls\":[\"bzz-raw://20919d05cb114135975f2105562f982928deaeb3b4b3562c9b14f11b77c5ca24\",\"dweb:/ipfs/QmVUsNz4xA6rt7HwxvidEJgHWz8qzUcgDTUaC5CTpdKs8V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test/test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test/test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/test.sol": {
				"ast": {
					"absolutePath": "test/test.sol",
					"exportedSymbols": {
						"RequireExample": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RequireExample",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "RequireExample",
							"nameLocation": "72:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "63:34:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "36:61:0"
				},
				"id": 0
			}
		}
	}
}